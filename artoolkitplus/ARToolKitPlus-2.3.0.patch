diff -ruN ARToolKitPlus-2.3.0/android-arm.cmake ARToolKitPlus-2.3.0-patch/android-arm.cmake
--- ARToolKitPlus-2.3.0/android-arm.cmake	1970-01-01 09:00:00.000000000 +0900
+++ ARToolKitPlus-2.3.0-patch/android-arm.cmake	2014-03-29 15:07:21.800951170 +0900
@@ -0,0 +1,26 @@
+# CMake toolchain to build ARToolKitPlus 2.3.0 for Android 2.2. Sample usage:
+#
+# ANDROID_BIN=`pwd`/../android-ndk-r9d/toolchains/arm-linux-androideabi-4.6/prebuilt/linux-x86_64/bin/arm-linux-androideabi \
+# ANDROID_CPP=`pwd`/../android-ndk-r9d/sources/cxx-stl/gnu-libstdc++/4.6/ \
+# ANDROID_ROOT=`pwd`/../android-ndk-r9d/platforms/android-9/arch-arm/ \
+# cmake -DCMAKE_TOOLCHAIN_FILE=android-arm.cmake -DCMAKE_INSTALL_PREFIX=..
+#
+# If you really need to use ARToolKitPlus on a CPU with no FPU, replace "libs/armeabi-v7a" by "libs/armeabi" and
+# "-march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16" with "-march=armv5te -mtune=xscale -msoft-float"
+
+set(CMAKE_SYSTEM_NAME UnixPaths)
+set(CMAKE_SYSTEM_PROCESSOR arm)
+set(ANDROID TRUE)
+
+set(CMAKE_C_COMPILER   "$ENV{ANDROID_BIN}-gcc")
+set(CMAKE_CXX_COMPILER "$ENV{ANDROID_BIN}-g++")
+
+set(CMAKE_C_LINK_EXECUTABLE    "<CMAKE_C_COMPILER>   <FLAGS> <CMAKE_C_LINK_FLAGS>   <LINK_FLAGS> <OBJECTS> -o <TARGET> -nostdlib <LINK_LIBRARIES> -L$ENV{ANDROID_ROOT}/usr/lib/ -lgcc -ldl -lz -lm -lc")
+set(CMAKE_CXX_LINK_EXECUTABLE  "<CMAKE_CXX_COMPILER> <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> -nostdlib <LINK_LIBRARIES> -L$ENV{ANDROID_CPP}/libs/armeabi-v7a/ -L$ENV{ANDROID_ROOT}/usr/lib/ -lgnustl_static -lgcc -ldl -lz -lm -lc")
+
+set(CMAKE_C_CREATE_SHARED_LIBRARY    "<CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <CMAKE_SHARED_LIBRARY_SONAME_C_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> -nostdlib <LINK_LIBRARIES> -L$ENV{ANDROID_ROOT}/usr/lib/ -lgcc -ldl -lz -lm -lc")
+set(CMAKE_CXX_CREATE_SHARED_LIBRARY  "<CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> -nostdlib <LINK_LIBRARIES> -L$ENV{ANDROID_CPP}/libs/armeabi-v7a/ -L$ENV{ANDROID_ROOT}/usr/lib/ -lgnustl_static -lgcc -ldl -lz -lm -lc")
+
+add_definitions("-DANDROID -fPIC -ffunction-sections -funwind-tables -fstack-protector -march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16 -fomit-frame-pointer -fstrict-aliasing -funswitch-loops -finline-limit=300")
+
+include_directories("$ENV{ANDROID_CPP}/include/" "$ENV{ANDROID_CPP}/libs/armeabi-v7a/include/" "$ENV{ANDROID_ROOT}/usr/include/")
diff -ruN ARToolKitPlus-2.3.0/android-x86.cmake ARToolKitPlus-2.3.0-patch/android-x86.cmake
--- ARToolKitPlus-2.3.0/android-x86.cmake	1970-01-01 09:00:00.000000000 +0900
+++ ARToolKitPlus-2.3.0-patch/android-x86.cmake	2014-03-29 15:07:21.800951170 +0900
@@ -0,0 +1,23 @@
+# CMake toolchain to build ARToolKitPlus 2.3.0 for Android 2.2. Sample usage:
+#
+# ANDROID_BIN=`pwd`/../android-ndk/toolchains/x86-4.6/prebuilt/linux-x86_64/bin/i686-linux-android \
+# ANDROID_CPP=`pwd`/../android-ndk/sources/cxx-stl/gnu-libstdc++/4.6/ \
+# ANDROID_ROOT=`pwd`/../android-ndk/platforms/android-9/arch-x86/ \
+# cmake -DCMAKE_TOOLCHAIN_FILE=android-x86.cmake -DCMAKE_INSTALL_PREFIX=..
+
+set(CMAKE_SYSTEM_NAME UnixPaths)
+set(CMAKE_SYSTEM_PROCESSOR atom)
+set(ANDROID TRUE)
+
+set(CMAKE_C_COMPILER   "$ENV{ANDROID_BIN}-gcc")
+set(CMAKE_CXX_COMPILER "$ENV{ANDROID_BIN}-g++")
+
+set(CMAKE_C_LINK_EXECUTABLE    "<CMAKE_C_COMPILER>   <FLAGS> <CMAKE_C_LINK_FLAGS>   <LINK_FLAGS> <OBJECTS> -o <TARGET> -nostdlib <LINK_LIBRARIES> -L$ENV{ANDROID_ROOT}/usr/lib/ -lgcc -ldl -lz -lm -lc")
+set(CMAKE_CXX_LINK_EXECUTABLE  "<CMAKE_CXX_COMPILER> <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS> -o <TARGET> -nostdlib <LINK_LIBRARIES> -L$ENV{ANDROID_CPP}/libs/x86/ -L$ENV{ANDROID_ROOT}/usr/lib/ -lgnustl_static -lgcc -ldl -lz -lm -lc")
+
+set(CMAKE_C_CREATE_SHARED_LIBRARY    "<CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <CMAKE_SHARED_LIBRARY_SONAME_C_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> -nostdlib <LINK_LIBRARIES> -L$ENV{ANDROID_ROOT}/usr/lib/ -lgcc -ldl -lz -lm -lc")
+set(CMAKE_CXX_CREATE_SHARED_LIBRARY  "<CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> -nostdlib <LINK_LIBRARIES> -L$ENV{ANDROID_CPP}/libs/x86/ -L$ENV{ANDROID_ROOT}/usr/lib/ -lgnustl_static -lgcc -ldl -lz -lm -lc")
+
+add_definitions("-DANDROID -fPIC -ffunction-sections -funwind-tables -fstack-protector -mtune=atom -mssse3 -mfpmath=sse -fomit-frame-pointer -fstrict-aliasing -funswitch-loops -finline-limit=300")
+
+include_directories("$ENV{ANDROID_CPP}/include/" "$ENV{ANDROID_CPP}/libs/x86/include/" "$ENV{ANDROID_ROOT}/usr/include/")
diff -ruN ARToolKitPlus-2.3.0/CMakeLists.txt ARToolKitPlus-2.3.0-patch/CMakeLists.txt
--- ARToolKitPlus-2.3.0/CMakeLists.txt	2012-09-15 21:36:20.000000000 +0900
+++ ARToolKitPlus-2.3.0-patch/CMakeLists.txt	2014-03-29 15:07:39.107253725 +0900
@@ -8,9 +8,9 @@
 option(ARTK_USE_BOOST "Compile with boost (OpenCV calibration file support)" FALSE)
 
 if(WIN32)
-	add_definitions(-D_CRT_SECURE_NO_WARNINGS -DAR_LIBRARY)
+	add_definitions(-D_CRT_SECURE_NO_WARNINGS -DAR_STATIC)
 else(WIN32)
-    add_definitions(-Wall -O3)
+    add_definitions(-Wall -O3 -fPIC)
 endif(WIN32)
 
 if(ARTK_USE_BOOST)
@@ -29,18 +29,18 @@
 	${AR_SOURCE_DIR}/src/librpp/*.cpp
 	)
 
-add_library(ARToolKitPlus SHARED ${HEADERS_AR} ${SOURCES_AR})
+add_library(ARToolKitPlus STATIC ${HEADERS_AR} ${SOURCES_AR})
 
 if(ARTK_BUILD_EXAMPLES)
     add_subdirectory(bin/)
 endif(ARTK_BUILD_EXAMPLES)
 
 # make install
-set(CMAKE_INSTALL_PREFIX /usr)
+# set(CMAKE_INSTALL_PREFIX /usr)
 
 install(TARGETS ARToolKitPlus 
-LIBRARY DESTINATION lib  
-ARCHIVE DESTINATION lib
+LIBRARY DESTINATION lib${LIB_SUFFIX} 
+ARCHIVE DESTINATION lib${LIB_SUFFIX}
 RUNTIME DESTINATION bin)
 
 install(DIRECTORY include/ DESTINATION include)
